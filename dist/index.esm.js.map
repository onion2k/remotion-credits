{
  "version": 3,
  "sources": ["../src/index.tsx", "../src/CreditsScroller/index.tsx", "../src/useZoom.ts", "../src/CreditsImageFader/index.tsx", "../src/CreditsFader/index.tsx"],
  "sourcesContent": ["import { AbsoluteFill, Series } from 'remotion'\nimport { CreditsScroller } from './CreditsScroller';\nimport { CreditsImageFader } from './CreditsImageFader';\nimport { CreditsFader } from './CreditsFader';\n\nimport './credits.css';\n\nexport interface iCreditLine {\n    role: string,\n    name: string,\n    padding: number\n}\n\nexport interface iScreen {\n    duration: number,\n    credits?: Array<iCreditLine>,\n    image?: string,\n    className?: string,\n    caption?: string\n}\n\nexport const Credits: React.FC<{\n    credits: Array<iScreen>\n}> = ({ credits }) => {\n    return (<AbsoluteFill>\n        <Series>\n            {credits.map((screen, index) => {\n                if (!screen?.credits && !screen?.image) {\n                    return <Series.Sequence key={`screen-${index}`} durationInFrames={screen.duration}><></></Series.Sequence>\n                }\n                if (screen.credits && screen.credits.length === 1) {\n                    return (\n                        <Series.Sequence key={`screen-${index}`} durationInFrames={screen.duration}>\n                            <CreditsFader\n                                credits={{ name: screen.credits[0].name as string, role: screen.credits[0].role as string }}\n                            />\n                        </Series.Sequence>\n                    )\n                }\n                if (screen.credits) {\n                    return (\n                        <Series.Sequence key={`screen-${index}`} durationInFrames={screen.duration} layout=\"none\">\n                            <CreditsScroller credits={screen.credits} className={screen.className} />\n                        </Series.Sequence>\n                    )\n                }\n                if (screen.image) {\n                    return (<Series.Sequence key={`screen-${index}`} durationInFrames={screen.duration}>\n                        <CreditsImageFader\n                            imagePath={screen.image}\n                            className={screen.className ?? ''}\n                            caption={screen.caption ?? ''}\n                        />\n                    </Series.Sequence>)\n                }\n                return null;\n            })}\n        </Series>\n    </AbsoluteFill >);\n};\n\nexport default Credits;\n", "import { useEffect, useRef, useState } from 'react';\nimport { interpolate, useCurrentFrame, useVideoConfig } from 'remotion'\nimport { useZoom, ZOOM_SIZE } from '../useZoom';\n\nimport './credits-scroller.css';\n\nconst CreditLine: React.FC<{ role: string, name: string | string[] }> = ({ role, name }) => {\n\treturn (\n\t\t<>\n\t\t\t<span className={\"credit-role\"}>{role}:</span>\n\t\t\t<span className={\"credit-name\"}>\n\t\t\t\t{(typeof name === 'object') ? name.map((name, index) => (<span key={`credits-line-${role}-${name}`}>{name}</span>)) : name}\n\t\t\t</span>\n\t\t</>)\n}\n\nexport const CreditsScroller: React.FC<{ className?: string, credits: Array<{ role: string, name: string | string[], padding?: number, className?: string }> }> = ({ className = '', credits }) => {\n\tconst frame = useCurrentFrame();\n\tconst video = useVideoConfig();\n\n\tconst [{ zoom }, zoomRef] = useZoom();\n\n\tconst creditsEl = useRef<HTMLUListElement>(null);\n\tconst [creditsElHeight, setCreditsElHeight] = useState<number>(0);\n\n\tconst offset = interpolate(\n\t\tframe,\n\t\t[0, video.durationInFrames],\n\t\t[video.height, -1 * creditsElHeight],\n\t\t{ extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n\t);\n\n\tuseEffect(() => {\n\t\tif (creditsEl.current) {\n\t\t\tsetCreditsElHeight(creditsEl.current.getBoundingClientRect().height / zoom);\n\t\t}\n\t}, [creditsEl, zoom]);\n\n\treturn (<>\n\t\t<ul\n\t\t\tref={creditsEl}\n\t\t\tclassName={`credits-scroller ${className}`}\n\t\t\tstyle={{ transform: `translateY(${offset}px)` }}>\n\t\t\t{credits.map(\n\t\t\t\t(line, index) => (<li\n\t\t\t\t\tkey={`c-${index}`}\n\t\t\t\t\tclassName={\"credits-line\"}\n\t\t\t\t\tstyle={{ paddingBottom: line.padding }}>\n\t\t\t\t\t<CreditLine role={line.role} name={line.name} />\n\t\t\t\t</li>)\n\t\t\t)\n\t\t\t}\n\t\t</ul>\n\t\t<div\n\t\t\tref={zoomRef}\n\t\t\tstyle={{\n\t\t\t\tposition: 'absolute',\n\t\t\t\tdisplay: 'block',\n\t\t\t\ttop: -ZOOM_SIZE + 'px',\n\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\theight: ZOOM_SIZE + 'px',\n\t\t\t\twidth: ZOOM_SIZE + 'px'\n\t\t\t}}>.</div>\n\n\t</>);\n};\n", "import {useEffect, useState} from 'react';\n\ninterface Zoom {\n  zoom: number\n}\n\nexport const ZOOM_SIZE = 20;\n\nexport function useZoom<T extends HTMLElement = HTMLDivElement>(): [\n  Zoom,\n  (node: T | null) => void,\n] {\n  const [zoomElRef, setZoomElRef] = useState<T | null>(null)\n  const [zoom, setZoom] = useState<Zoom>({\n    zoom: 1\n  })\n\n\tuseEffect(()=>{\n\t\tconst _zoom =\n\t\t\t(zoomElRef?.getBoundingClientRect().height as number) /\n\t\t\tZOOM_SIZE;\n\t\tsetZoom({ zoom: _zoom });\n\t}, [zoomElRef]);\n\n  return [zoom, setZoomElRef]\n}", "import { Img, interpolate, staticFile, useCurrentFrame, useVideoConfig } from 'remotion';\n\nimport './credits-image-fader.css';\n\nexport const CreditsImageFader: React.FC<{ imagePath: string, className: string, caption?: string }> = ({ imagePath, className, caption }) => {\n\tconst frame = useCurrentFrame();\n\tconst video = useVideoConfig();\n\n\tconst opacity = interpolate(\n\t\tframe,\n\t\t[0, video.durationInFrames * 0.1, video.durationInFrames * 0.9, video.durationInFrames],\n\t\t[0, 1, 1, 0],\n\t\t{ extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n\t);\n\n\tconst imgSrc = imagePath.startsWith(\"https://\") ? imagePath : staticFile(imagePath);\n\n\tconsole.log(imgSrc)\n\n\treturn (\n\t\t<div className={\"credits-image-fader\"}>\n\t\t\t<div className={\"image-container\"} style={{ opacity }}>\n\t\t\t\t<Img src={imgSrc} />\n\t\t\t\t{caption && <div>{caption}</div>}\n\t\t\t</div>\n\t\t</div>);\n};\n", "import { interpolate, useCurrentFrame, useVideoConfig } from 'remotion'\n\nimport './credits-fader.css';\n\nexport const CreditsFader: React.FC<{ credits: { role: string, name: string } }> = ({ credits }) => {\n\tconst frame = useCurrentFrame();\n\tconst video = useVideoConfig();\n\n\tconst opacity = interpolate(\n\t\tframe,\n\t\t[0, video.durationInFrames * 0.1, video.durationInFrames * 0.9, video.durationInFrames],\n\t\t[0, 1, 1, 0],\n\t\t{ extrapolateLeft: 'clamp', extrapolateRight: 'clamp' }\n\t);\n\n\treturn (\n\t\t<div className={\"credits-fader\"}>\n\t\t\t{credits.role && <p className=\"uppercase\" style={{ opacity }}>{credits.role}</p>}\n\t\t\t{credits.name && <p style={{ opacity }}>{credits.name}</p>}\n\t\t</div>);\n};\n"],
  "mappings": "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",
  "names": []
}
